"""
Django settings for onlineexam project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

import  pymysql
pymysql.install_as_MySQLdb()

class Database:


    database_cred = {

        "host": "HOST",

        "user": "USER",

        "password": "PASSWORD",

        "database": "DATABASE",

        "autocommit": True,  # making sure updated, inserts, deletions are commited for every query

        "cursorclass": pymysql.cursors.DictCursor,

    }


    def __init__(self, database_cred: dict = None):

        if database_cred:

            self.conn = pymysql.connect(**database_cred)

        else:

            self.conn = pymysql.connect(**self.database_cred)

        # end if


    def run_qry(self, sql: str):

        # to check DB Connection pin the instance

        self.conn.ping()

        with self.conn.cursor() as cursor:

            cursor.execute(sql)

            self.conn.commit()

            result = cursor.fetchall()

        # end with

        return result


    def run_multiple_queries(self, sql_statements: list[str]):

        if len(sql_statements) == 1:

            result = self.run_qry(sql_statements[0])

            return result


        new_db_cred = {"client_flag": CLIENT.MULTI_STATEMENTS, **self.database_cred}

        sql_statements = ";".join(sql_statements)


        sql_connetion = pymysql.connect(**new_db_cred)

        # to check DB Connection pin the instance

        sql_connetion.ping()

        with sql_connetion.cursor() as cursor:

            affected_rows = cursor.execute(sql_statements)

            self.conn.commit()

            result = cursor.fetchall()

        return result
# end class

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-px^ip-v_)f6sg4^$@=tekq5@l7v&2!q%30k(7kt#p&u(lcz_65'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'loginapp',
    'examapp',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'onlineexam.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'onlineexam.wsgi.application'


DATABASES = {  
    'default': {  
        'ENGINE': 'django.db.backends.mysql',  
        'NAME':'project',
        'USER':'root',  
        'PASSWORD':'Pratik@2503', 
        'HOST':'localhost',  
        'PORT':'3306'  
    }  
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
